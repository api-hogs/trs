use Mix.Config

# For production, we configure the host to read the PORT
# from the system environment. Therefore, you will need
# to set PORT=80 before running your server.
#
# You should also configure the url host to something
# meaningful, we use this information when generating URLs.
#
# Finally, we also include the path to a manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# which you typically run after static files are built.

config :trs, Trs.Endpoint,
  http: [port: 8889],
  url: [host: "localhost", port: 80],
  server: true

# Do not print debug messages in production
config :logger, level: :info

config :trs, Trs.Endpoint,
  secret_key_base: "8rsVq1gMTGilI44ojNrZCErkSK41evOsucKzWr66G31lsfswII0Gft8wbazow+Qv"

config :trs, Trs.Repo,
  adapter: Ecto.Adapters.Postgres,
  host: "localhost",
  database: "trs_production",
  size: 10 # The amount of database connections in the pool

config :phoenix_token_auth,
  user_model: Trs.User,
  repo: Trs.Repo,
  crypto_provider: Comeonin.Bcrypt,
  token_validity_in_minutes: 7 * 24 * 60 * 1000,
  email_sender: "info@sandboxd97f3d3709954463ac6a8db4316e7aac.mailgun.org",
  emailing_module: Trs.Mailer,
  mailgun_domain: "https://api.mailgun.net/v3/sandboxd97f3d3709954463ac6a8db4316e7aac.mailgun.org",
  mailgun_key: "key-1fdd3873937ad32f5bcb92a711ac8391",
  user_model_validator: {Trs.User, :phoenix_token_auth_validator}

config :joken,
  secret_key: "very secret test key"

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :trs, Trs.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [port: 443,
#               keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#               certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables return an absolute path to
# the key and cert in disk or a relative path inside priv,
# for example "priv/ssl/server.key".
#
# We also recommend setting `force_ssl`, ensuring no data is
# ever sent via http, always redirecting to https:
#
#     config :trs, Trs.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :trs, Trs.Endpoint, server: true
#
