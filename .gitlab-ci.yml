variables:
  REDIS_HOST: redis
  POSTGRES_HOST: postgres
  MIX_ENV: test

stages:
  - build
  - test
  - deploy_api
  - deploy_frontend

specs:
  stage: test
  image: coders51/elixir-postgres
  services:
    - redis
    - postgres

  script:
    - add-apt-repository ppa:launchpad/ppa
    - apt-get update
    - apt-get install -y build-essential erlang-base-hipe erlang-dev erlang-manpages erlang-eunit erlang-nox libicu-dev libmozjs185-dev libcurl4-openssl-dev
    - pwd
    - cd /tmp
    - git clone git://github.com/apache/couchdb.git
    - cd couchdb
    - git checkout 1.6.x
    - ls -all
    - ./configure; make; make install
    - ls -all
    - ./bin/couchdb -b
    - cd /builds/api-hogs/trs
    - rm -rf config/test.exs
    - cp config/test.exs.gitlab config/test.exs
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
    - mix deps.compile
    - mix ecto.create
    - mix ecto.migrate
    - mix test

# deploy_api:
#   stage: deploy_api
#   image: ruby
#   script:
#     - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#     - eval $(ssh-agent -s)
#     # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
#     - ssh-add <(echo "$SSH_PRIVATE_KEY")
#     - mkdir -p ~/.ssh
#     - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#     - bundle install
#     - bundle exec cap staging deploy
#   only:
#     - master

# deploy_frontend:
#   stage: deploy_frontend
#   image: ruby
#   script:
#     - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#     - eval $(ssh-agent -s)
#     # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
#     - ssh-add <(echo "$SSH_PRIVATE_KEY")
#     - mkdir -p ~/.ssh
#     - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#     - cd engines/hundehjem
#     - bundle install
#     - bundle exec cap staging deploy
#   only:
#     - master
